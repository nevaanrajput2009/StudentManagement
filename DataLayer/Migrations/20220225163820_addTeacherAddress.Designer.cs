// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace UI.Web.Migrations
{
    [DbContext(typeof(StudentManagementSystemContext))]
    [Migration("20220225163820_addTeacherAddress")]
    partial class addTeacherAddress
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UI.Web.Models.ClassMaster", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"), 1L, 1);

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('Y')")
                        .IsFixedLength();

                    b.HasKey("ClassId")
                        .HasName("PK__ClassMas__CB1927C0B2D0D4A5");

                    b.ToTable("ClassMaster", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.ClassSubject", b =>
                {
                    b.Property<int>("ClassSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassSubjectId"), 1L, 1);

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("ClassSubjectId");

                    b.ToTable("Class_Subject", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"), 1L, 1);

                    b.Property<string>("Designation")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmpId")
                        .HasName("PK__Employee__AF2DBB992908E9D9");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.StaffKindMaster", b =>
                {
                    b.Property<int>("StaffKindId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffKindId"), 1L, 1);

                    b.Property<string>("IsActive")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StaffKindId")
                        .HasName("PK__StaffKin__494DA322C3442136");

                    b.ToTable("StaffKindMaster", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.StaffMemberMaster", b =>
                {
                    b.Property<int>("StaffMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffMemberId"), 1L, 1);

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("StaffKindId")
                        .HasColumnType("int");

                    b.HasKey("StaffMemberId")
                        .HasName("PK__StaffMem__2C1EBDC16F54351D");

                    b.ToTable("StaffMemberMaster", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.StudentAddress", b =>
                {
                    b.Property<int>("StudentAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentAddressId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("MobileNumber")
                        .HasColumnType("decimal(12,0)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentAddressId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentAddress", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.StudentClass", b =>
                {
                    b.Property<int>("StudentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentClassId"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentClassId");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentClass", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.StudentMaster", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RollNum")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.ToTable("StudentMaster", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.StudentSubjectDetail", b =>
                {
                    b.Property<int>("StudentSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentSubjectId"), 1L, 1);

                    b.Property<int>("ClassSubjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentSubjectId")
                        .HasName("PK__StudentS__54F6B821C4BC96E6");

                    b.HasIndex("ClassSubjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentSubjectDetail", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.SubjectMaster", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"), 1L, 1);

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('Y')")
                        .IsFixedLength();

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SubjectId");

                    b.ToTable("SubjectMaster", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.Teacher", b =>
                {
                    b.Property<int>("TeachedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeachedId"), 1L, 1);

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TeachedId");

                    b.ToTable("TeacherMaster", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.TeacherAddress", b =>
                {
                    b.Property<int>("TeacherAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherAddressId"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("TeacherAddressId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherAddress", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.UserMaster", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__UserMast__1788CC4C8B1E3F46");

                    b.HasIndex(new[] { "UserName" }, "UQ__UserMast__C9F284562F577134")
                        .IsUnique();

                    b.ToTable("UserMaster", (string)null);
                });

            modelBuilder.Entity("UI.Web.Models.StudentAddress", b =>
                {
                    b.HasOne("UI.Web.Models.StudentMaster", "Student")
                        .WithMany("StudentAddresses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_StudentAddress_StudentMaster");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UI.Web.Models.StudentClass", b =>
                {
                    b.HasOne("UI.Web.Models.ClassMaster", "Class")
                        .WithMany("StudentClasses")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK_StudentClass_ClassMaster");

                    b.HasOne("UI.Web.Models.StudentMaster", "Student")
                        .WithMany("StudentClasses")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_StudentClass_StudentMaster");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UI.Web.Models.StudentSubjectDetail", b =>
                {
                    b.HasOne("UI.Web.Models.ClassSubject", "ClassSubject")
                        .WithMany("StudentSubjectDetails")
                        .HasForeignKey("ClassSubjectId")
                        .IsRequired()
                        .HasConstraintName("FK_StudentSubject_Class_Subject");

                    b.HasOne("UI.Web.Models.StudentMaster", "Student")
                        .WithMany("StudentSubjectDetails")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_StudentSubject_StudentMaster");

                    b.Navigation("ClassSubject");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UI.Web.Models.TeacherAddress", b =>
                {
                    b.HasOne("UI.Web.Models.Teacher", "Teacher")
                        .WithMany("TeacherAddress")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("UI.Web.Models.ClassMaster", b =>
                {
                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("UI.Web.Models.ClassSubject", b =>
                {
                    b.Navigation("StudentSubjectDetails");
                });

            modelBuilder.Entity("UI.Web.Models.StudentMaster", b =>
                {
                    b.Navigation("StudentAddresses");

                    b.Navigation("StudentClasses");

                    b.Navigation("StudentSubjectDetails");
                });

            modelBuilder.Entity("UI.Web.Models.Teacher", b =>
                {
                    b.Navigation("TeacherAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
